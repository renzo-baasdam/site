name: Build and Deploy Vue3 ui to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
  GAR_LOCATION: europe-west4
  GAR_REPOSITORY: site
  GKE_CLUSTER: k8s-cluster
  GKE_ZONE: europe-west4
  GKE_DEPLOYMENT_NAME: vue3-site-deployment
  IMAGE: static-site
  BASE_PATH: services/ui

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ env.WIF_PROVIDER }}
        service_account: ${{ env.SERVICE_ACCOUNT }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          $BASE_PATH

    # Login to GCP Artifact Registry
    - name: Login to Artifact Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}
        
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY/$IMAGE:$GITHUB_SHA"
        
    # Set up kustomize
    - name: Set up Kustomize
      working-directory: ${{ env.BASE_PATH }}/deploy
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      working-directory: ${{ env.BASE_PATH }}/deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image $IMAGE:latest=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$GKE_DEPLOYMENT_NAME
        kubectl get services -o wide
